#########################   GRIN - Disturbance    ##############################
#########################    NMDS - Community     ##############################
#########################  University of Florida  ##############################
#########################       Gage LaPierre     ##############################
#########################          2022           ##############################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################

######################### Clears Environment & History  ########################

rm(list=ls(all=TRUE))
cat("\014") 

#########################     Installs Packages   ##############################

list.of.packages <- c("tidyverse", "vegan")
new.packages <- list.of.packages[!(list.of.packages %in% 
                                     installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

##########################     Loads Packages     ##############################

library(tidyverse)
library(vegan)

##########################     Read in Data       ##############################
GRIN = read.csv("Data/GRIN.csv")
GRIN$Coverage = as.numeric(GRIN$Coverage)

str(GRIN)
summary(GRIN)

# Create species pivot table #
Spp = dplyr::select(GRIN, ID, Species, Coverage) %>% matrify()

# Create grouped treatment/environment table and summaries to fit species table#
Treat = group_by(GRIN, ID, Treatment) %>% summarise()

# Run Bray-Curtis dissimilarity on pre & post treatment data #
vegdist_ = vegdist(Spp, method = "bray")

# Use dissimilarities to create scree plot - attain the number of dimensions #
# for NMDS with least stress. Using function that produces a # 
# stress vs. dimensional plot #

NMDS.scree <- function(x) { # x is the name of the data frame variable
  plot(rep(1, 10), replicate(10, metaMDS(x, autotransform = F, k = 1)$stress), 
       xlim = c(1, 10),ylim = c(0, 0.30), xlab = "# of Dimensions", 
       ylab = "Stress", main = "NMDS Stress Plot")
  for (i in 1:10) {
    points(rep(i + 1,10),replicate(10, metaMDS(x, autotransform = F, k = i + 1)$stress))
  }
}

#NMDS.scree(vegdist_) 
# --> Based on scree plot two dimensions will be sufficient for NMDS #

# MDS and plot stress using a Shepherd Plot #
MDS = metaMDS(vegdist_, distance = "bray", trymax = 500, maxit = 999, k=3, 
              trace = F, autotransform = FALSE, wascores = TRUE)
MDS$stress
stressplot(MDS) 
goodness(MDS)
# --> Shepherd plots showcase a not perfect, but acceptable R^2 value #

# Create a frame for functional groups alongside species for NMDS graph #
species_groups = group_by(GRIN, Species, Group) %>% summarise()

# Extract  species scores & convert to a data.frame for NMDS graph #
species.scores <- as.data.frame(scores(MDS, display="species"))

# create a column of species, from the row names of species.scores  #                                                            )  
species.scores$species <- rownames(species.scores)

# create a column for functional groups for NMDS graph #                                                       )  
species.scores$Group <- species_groups$Group

# Turn MDS points into a dataframe with treatment data for use in ggplot #
NMDS = data.frame(MDS = MDS$points, Treat = Treat$Treatment, 
                      Plot = Treat$ID)

# NMDS Graphs
NMDS_plot = 
  ggplot() +
  geom_point(data = NMDS, aes(x = MDS.MDS1, y = MDS.MDS2, shape = Treat)) +
  geom_text(data = species.scores, aes(x = NMDS1, y = NMDS2, label = species, color = Group)) +
  stat_ellipse(data = NMDS, aes(x = MDS.MDS1, y = MDS.MDS2,  type = Treat), 
               linetype = "dashed", show.legend = T) +
  theme_bw() +
  labs(x="MDS1", y="MDS2", title = "") +
  theme(plot.title = element_text(hjust = 0.5)) 
NMDS_plot

ggsave("Figures/NMDS.png", width = 10, height = 7)

# Perform adonis to test the significance of treatments#
# Pre-Treatment Data

# Post-Treatment Data

adon.results <- adonis2(Spp ~ NMDS$Treat, method="bray",perm=999)
print(adon.results)
