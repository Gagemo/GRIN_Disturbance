################################################################################
################################################################################
#########################   GRIN - Disturbance    ##############################
#########################       Bahaiagrass       ##############################
#########################  University of Florida  ##############################
#########################     Gage LaPierre       ##############################
#########################      2021 - 2023        ##############################
################################################################################
################################################################################

######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014") 

#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "extrafont", 
                      "ggsignif", "multcompView", "ggpubr", "rstatix",
                      "vegan", "labdsv", "tables", "plotrix")
new.packages <- list.of.packages[!(list.of.packages %in% 
                                     installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

##########################     Loads Packages     ##############################
library(extrafont)
#font_import()
loadfonts(device = "win")
library(tidyverse)
library(vegan)
library(agricolae)
library(ggsignif)
library(multcompView)
library(ggpubr)
library(rstatix)
library(vegan)
library(labdsv)
library(tables)
library(plotrix)

####################### Read in 2021 - 2023 Data  ##############################
GRIN = read.csv("Data/GRIN - 2020-2023.csv")
GRIN$Coverage = as.numeric(GRIN$Coverage)
GRIN$Plot = as.character(GRIN$Plot)

str(GRIN)
summary(GRIN)

# Remove Seeding Treatment # 
GRIN = filter(GRIN, Treatment != 'S')

# Reclasifys coverage data (CV) from 1-10 scale to percent scale #
GRIN <- mutate(GRIN, Coverage = case_when(
  grepl(10, Coverage) ~ 97.5,
  grepl(1, Coverage) ~ 0.1,
  grepl(2, Coverage) ~ 0.5,
  grepl(3, Coverage) ~ 1.5,
  grepl(4, Coverage) ~ 3.5,
  grepl(5, Coverage) ~ 7.5,
  grepl(6, Coverage) ~ 17.5,
  grepl(7, Coverage) ~ 37.5,
  grepl(8, Coverage) ~ 62.5,
  grepl(9, Coverage) ~ 85,
  grepl(0, Coverage) ~ 0,
))

PN = filter(GRIN, Species == "Paspalum notatum")
summary(PN)

# Creates data sets by year #
PN_21 = filter(PN, Year == 1)
PN_22 = filter(PN, Year == 2)

################################################################################
################ Test for Significance across years ############################
################################################################################

############################### 2021 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = PN_21)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
PN_21$Treatment = as.factor(PN_21$Treatment)
PN_21 %>% levene_test(Coverage ~ Treatment)

# Test for Significance #
anova_21 = PN_21 %>% kruskal_test(Coverage ~ Treatment) %>% 
  add_significance()
summary(anova_21)

tukey_21 <- PN_21 %>% 
  dunn_test(Coverage ~ Treatment) %>% 
  add_significance() %>% 
  add_xy_position()
tukey_21

############################### 2022 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = PN_22)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
PN_22$Treatment = as.factor(PN_22$Treatment)
PN_22 %>% levene_test(Coverage ~ Treatment)

# Test for Significance #
anova_22 = PN_22 %>% kruskal_test(Coverage ~ Treatment) %>% 
  add_significance()
summary(anova_22)

tukey_22 <- PN_22 %>% 
  dunn_test(Coverage ~ Treatment) %>% 
  add_significance() %>% 
  add_xy_position()
tukey_22

################################################################################
################ Create Box Plot for Bahia Across Years ########################
################################################################################

## Bahia Coverage 2021 Box plot ##
BahiaBox21 = 
  ggplot(PN_21, aes(x = Treatment, y = Coverage), colour = Treatment) +
  geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
  geom_point(aes(fill=Treatment), 
             position = position_jitterdodge(), size = 4, alpha = 0.5) +
  stat_pvalue_manual(tukey_21, size = 8,
                     hide.ns = T)+
  labs(subtitle = get_test_label(anova_21,
                                 detailed = TRUE),
       caption = get_pwc_label(tukey_21)) +
  scale_fill_manual(labels=c('No-Till', 'Late-Spring', 'Winter'),
                    values=c("#FF3399", "#FFFF00", "#3366FF")) +
  scale_x_discrete(labels=c('No-Till', 'Late-Spring', 'Winter')) +
  theme_classic() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
        text=element_text(size=16),
        axis.title.x = element_text(size=15, face="bold", colour = "black"),    
        axis.title.y = element_text(size=15, face="bold", colour = "black"),   
        axis.text.x=element_text(size=15, face = "bold", color = "black"),
        axis.text.y=element_text(size=15, face = "bold", color = "black"),
        strip.text.x = 
          element_text(size = 15, colour = "black", face = "bold"),
        legend.position = "none") +
  guides(fill = guide_legend(label.position = "bottom")) +
  labs(x = "Treatment", y = "P. notatum % Coverage", title = "2021")
BahiaBox21

## Bahia Coverage 2022 Boxplot ##
BahiaBox22 = 
  ggplot(PN_22, aes(x = Treatment, y = Coverage), colour = Treatment) +
  geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
  geom_point(aes(fill=Treatment), 
             position = position_jitterdodge(), size = 4, alpha = 0.5) +
  stat_pvalue_manual(tukey_22, size = 8,
                     hide.ns = T)+
  labs(subtitle = get_test_label(anova_22,
                                 detailed = TRUE),
       caption = get_pwc_label(tukey_22)) +
  scale_fill_manual(labels=c('No-Till', 'Late-Spring', 'Winter'),
                    values=c("#FF3399", "#FFFF00", "#3366FF")) +
  scale_x_discrete(labels=c('No-Till', 'Late-Spring', 'Winter')) +
  theme_classic() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
        text=element_text(size=16),
        axis.title.x = element_text(size=15, face="bold", colour = "black"),    
        axis.title.y = ,   
        axis.text.x=element_text(size=15, face = "bold", color = "black"), 
        axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        strip.text.x = 
          element_text(size = 15, colour = "black", face = "bold"),
        legend.position = "none") +
  guides(fill = guide_legend(label.position = "bottom")) +
  labs(x = "Treatment", y = "", title = "2022")
BahiaBox22

################## Save Figures Above using ggarrange ##########################
ggarrange(BahiaBox21, BahiaBox22, ncol = 2, nrow = 1)
ggsave("Figures/Chapter 1 - Soil Disturbance Seasonality/21-22_BahiaBox.png", 
       width = 12, height = 10)

tmp <- tabular(Treatment ~ Coverage * (mean+sd+std.error), data=PN_21)
tmp

write.csv.tabular(tmp, "Figures/Chapter 1 - Soil Disturbance Seasonality/Pn_21.csv")

tmp <- tabular(Treatment ~ Coverage * (mean+sd+std.error), data=PN_22)
tmp

write.csv.tabular(tmp, "Figures/Chapter 1 - Soil Disturbance Seasonality/Pn_22.csv")

